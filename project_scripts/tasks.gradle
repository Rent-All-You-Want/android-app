ext.lastCommitHash = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().take(7).toUpperCase()
}

ext.commitsCount = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-list', '--count', 'HEAD'
        standardOutput = stdout
    }
    return Integer.valueOf(stdout.toString().trim())
}

ext.localProperties = {
    Properties localProperties = new Properties()
    if (rootProject.file(local_properties_name).exists()) {
        localProperties.load(rootProject.file(local_properties_name).newDataInputStream())
    }
    return localProperties
}

ext.localIp = {
    def ip4s = []
    NetworkInterface.getNetworkInterfaces()
            .findAll {
                it.isUp() && !it.isLoopback() && !it.isVirtual()
                        && (it.getName().contains("wlan") || it.getName().contains("eth"))
            }
            .each {
                it.getInetAddresses()
                        .findAll { !it.isLoopbackAddress() && it instanceof Inet4Address }
                        .each { ip4s << it.getHostAddress() }
            }
    return ip4s[0].toString().trim()
}

ext.setupLocalApiUrl = {
    application.localUrl = "\"http://" + localIp() + application.localUrl
}