plugins {
    id "com.android.application"
    id "com.google.gms.google-services"
    id "kotlin-kapt"
    id "kotlin-parcelize"
    id "org.jetbrains.kotlin.android"
    id "androidx.navigation.safeargs.kotlin"
    id "com.google.dagger.hilt.android"
    id "com.google.firebase.crashlytics"
}

android {

    namespace "com.pablojuice.rayw"
    compileSdk application.compileSdk

    signingConfigs {
        release {
            Properties props = localProperties()
            if (props.getProperty("certificate.keyPassword") != null) {
                storeFile file(props.getProperty("certificate.path"))
                keyAlias props.getProperty("certificate.keyAlias")
                keyPassword props.getProperty("certificate.keyPassword")
                storePassword props.getProperty("certificate.storePassword")
            }
        }
    }

    defaultConfig {
        applicationId "com.pablojuice.rayw"

        minSdk application.minSdk
        targetSdk application.targetSdk

        versionCode application.versionCode
        versionName application.versionName

        testInstrumentationRunner application.testRunner

        manifestPlaceholders.usesLocalBackEnd = false
    }

    buildTypes {
        release {
            //debuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            manifestPlaceholders.crashlyticsCollectionEnabled = true

            if (localProperties().isEmpty()) {
                signingConfig signingConfigs.debug
            } else signingConfig signingConfigs.release
        }
        debug {
            manifestPlaceholders.crashlyticsCollectionEnabled = false
        }
    }

    flavorDimensions application.defautFlavorDimension

    productFlavors {
        local {
            setupLocalApiUrl()
            println "Local api url: " + application.localUrl
            buildConfigField application.apiUrlType, application.apiUrl, application.localUrl
            manifestPlaceholders.usesLocalBackEnd = true
        }
        stage { buildConfigField application.apiUrlType, application.apiUrl, application.stageUrl }
        prod { buildConfigField application.apiUrlType, application.apiUrl, application.prodUrl }
    }

    compileOptions {
        sourceCompatibility application.javaVersion
        targetCompatibility application.javaVersion
    }

    kotlinOptions {
        jvmTarget = application.javaVersion.toString()
    }

    kapt {
        correctErrorTypes true
    }

    buildFeatures {
        viewBinding true
        buildConfig = true
    }

    lint {
        checkReleaseBuilds false
    }
}

dependencies {

    implementation project(":core:main")
    implementation project(":feature:test")

    implementation "androidx.core:core-splashscreen:$versions.splashscreen"

    implementation "com.google.dagger:hilt-android:$versions.daggerHilt"
    kapt "com.google.dagger:hilt-android-compiler:$versions.daggerHilt"

    testImplementation project(":test:unittest")
    androidTestImplementation project(":test:uitest")
}